package com.example.doodledigits.datastore

import android.content.Context
import androidx.datastore.preferences.core.*
import androidx.datastore.preferences.preferencesDataStore
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.map
import kotlinx.coroutines.flow.first
import kotlinx.coroutines.runBlocking

// üîπ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è DataStore (–∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —É —Ñ–∞–π–ª—ñ "user_preferences")
private val Context.dataStore by preferencesDataStore("user_preferences")

class UserPreferences(private val context: Context) {
    private val dataStore = context.dataStore

    companion object {
        val THEME_MODE = booleanPreferencesKey("theme_mode") // true = Dark, false = Light
        val SAVE_PHOTOS = booleanPreferencesKey("save_photos") // true = Save, false = Don't save
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–µ–º–∏
    val themeMode: Flow<Boolean> = dataStore.data.map { preferences ->
        preferences[THEME_MODE] ?: false // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —Å–≤—ñ—Ç–ª–∞ —Ç–µ–º–∞
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É "–ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ñ–æ—Ç–æ"
    val savePhotos: Flow<Boolean> = dataStore.data.map { preferences ->
        preferences[SAVE_PHOTOS] ?: false
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–º–∏ (–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ DataStore)
    suspend fun setThemeMode(isDark: Boolean) {
        dataStore.edit { preferences ->
            preferences[THEME_MODE] = isDark
        }
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è "–ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ñ–æ—Ç–æ"
    suspend fun setSavePhotos(save: Boolean) {
        dataStore.edit { preferences ->
            preferences[SAVE_PHOTOS] = save
        }
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–º–∏ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –∫–æ—Ä–∏—Å–Ω–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É)
    fun getThemeModeSync(): Boolean = runBlocking {
        dataStore.data.first()[THEME_MODE] ?: false
    }
}
